/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Pannel;

import DAO.ChucVu_DAO;
import DAO.NhanVien_DAO;
import DAO.TaiKhoan_DAO;
import DAO_IMP.ChucVuDAO_IMP;
import DAO_IMP.NhanVienDAO_IMP;
import DAO_IMP.TaiKhoanDAO_IMP;
import entity.ChucVu;
import entity.NhanVien;
import entity.TaiKhoan;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author hongh
 */
public class pnlTaiKhoan extends javax.swing.JPanel {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private TaiKhoan tk ;
    private NhanVien nv;
    private final TaiKhoan_DAO TaiKhoan_DAO;
    private NhanVien_DAO nhanVien_DAO;
    private TaiKhoan_DAO taiKhoan_DAO;
    private ChucVu_DAO chucVu_DAO;
    private static final String pass = "123456";
      public pnlTaiKhoan(TaiKhoan tk, NhanVien nv){
        this.tk = tk;
        this.nv = nv;
        initComponents();
        TaiKhoan_DAO = new TaiKhoanDAO_IMP();
       // capNhatDanhSachNhanVien();
        DuLieuMaNhanVien();
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblMaNhanVien = new javax.swing.JLabel();
        lblTenNhanVien = new javax.swing.JLabel();
        lblTenNVKyTu = new javax.swing.JLabel();
        txtMaNhanVien = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        pnlTacVu = new javax.swing.JPanel();
        btnCapLaiMatKhau = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lý tài khoản");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N

        lblMaNhanVien.setText("Mã nhân viên :");

        lblTenNhanVien.setText("Tên nhân viên   :");

        lblTenNVKyTu.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblTenNVKyTu.setToolTipText("");

        txtMaNhanVien.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMaNhanVien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                .addComponent(lblTenNhanVien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTenNVKyTu, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblMaNhanVien)
                        .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTenNVKyTu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách tài khoản nhân viên"));

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhân viên", "Tên nhân viên", "Mật khẩu", "Chức vụ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
        );

        pnlTacVu.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tác vụ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N

        btnCapLaiMatKhau.setText("Cấp lại mật khẩu");
        btnCapLaiMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapLaiMatKhauActionPerformed(evt);
            }
        });

        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTacVuLayout = new javax.swing.GroupLayout(pnlTacVu);
        pnlTacVu.setLayout(pnlTacVuLayout);
        pnlTacVuLayout.setHorizontalGroup(
            pnlTacVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTacVuLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(btnCapLaiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        pnlTacVuLayout.setVerticalGroup(
            pnlTacVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTacVuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTacVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLamMoi)
                    .addComponent(btnCapLaiMatKhau))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(390, 390, 390)
                        .addComponent(pnlTacVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(247, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlTacVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(268, 268, 268))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
       
        int row  = tblNhanVien.getSelectedRow();
       // txtMaNhanVien.setText(tblNhanVien.getValueAt(row, 0).toString());
       DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        
        Object cellValue = model.getValueAt(row, 0);
        Object cellValue1 = model.getValueAt(row, 1);
         
        AbstractDocument document = (AbstractDocument) txtMaNhanVien.getDocument();

        DocumentFilter oldFilter;
        oldFilter = document.getDocumentFilter();
        document.setDocumentFilter(null);

        // Đặt lại giá trị
        txtMaNhanVien.setText(cellValue.toString());
        // Đặt lại DocumentFilter
        document.setDocumentFilter(oldFilter);
        
        lblTenNVKyTu.setText(cellValue1.toString());
        
    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void btnCapLaiMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapLaiMatKhauActionPerformed
        // TODO add your handling code here:
        taiKhoan_DAO = new TaiKhoanDAO_IMP();
        if(txtMaNhanVien.getText().length()==6){
             try {
            taiKhoan_DAO.updataPasswordLost(txtMaNhanVien.getText(), pass, "Đã đăng xuất");
             capNhatDanhSachNhanVien_TheoTenDangNhap(txtMaNhanVien.getText());
             JOptionPane.showMessageDialog(this, "Mật khẩu cấp lại là : "+pass );
            } catch (Exception ex) {
                Logger.getLogger(pnlTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
                
            }
           
        }else{
            JOptionPane.showMessageDialog(this, "Tài khoản gồm 6 số !");
        }
    }//GEN-LAST:event_btnCapLaiMatKhauActionPerformed
    public static void addEightDigitLimit(JTextField textField) {
        ((javax.swing.text.AbstractDocument) textField.getDocument()).setDocumentFilter(new DocumentFilter() {
            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                String currentText = fb.getDocument().getText(0, fb.getDocument().getLength());
                currentText += text;

                if (currentText.length() <= 6 && currentText.matches("\\d*")) {
                    super.replace(fb, offset, length, text, attrs);
                }
            }

            @Override
            public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
                String currentText = fb.getDocument().getText(0, fb.getDocument().getLength());
                currentText += string;

                if (currentText.length() <= 6 && currentText.matches("\\d*")) {
                    super.insertString(fb, offset, string, attr);
                }
            }
        });
    }
    private void clearTable(DefaultTableModel model) {
    model.setRowCount(0);
   
    //Sau đó, để sử dụng hàm này, bạn chỉ cần gọi nó với mô hình của bảng:
    //clearTable((DefaultTableModel) tblGioHang.getModel());
    //Hàm clearTable sẽ đặt số hàng về 0 và cũng có thể đặt lại giá trị count nếu bạn sử dụng count để theo dõi số lượng hàng.
    }
    private void DuLieuMaNhanVien(){
            txtMaNhanVien.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
                @Override
                public void insertUpdate(DocumentEvent e) {
                    addEightDigitLimit(txtMaNhanVien);
                    if(txtMaNhanVien.getText().length() <=5){
                        
                         
                    }else{
                        
                        capNhatDanhSachNhanVien_TheoTenDangNhap(txtMaNhanVien.getText());
                        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
                        int row = model.getRowCount();
                        Object cellValue_Ten = model.getValueAt(row - 1, 1);
                        
                        lblTenNVKyTu.setText(cellValue_Ten.toString());
                      
                    }
                }
                
            @Override
            public void removeUpdate(DocumentEvent e) {
                if( txtMaNhanVien.getText().length()<= 5){
                        if(txtMaNhanVien.getText().length()==0){
                            
                            clearTable((DefaultTableModel) tblNhanVien.getModel());
                        }
                        if(txtMaNhanVien.getText().length()> 0 ){
                                
                                clearTable((DefaultTableModel) tblNhanVien.getModel());
                                capNhatDanhSachNhanVien_TheoTenDangNhap(txtMaNhanVien.getText());
                        }   
                      
                    }else{
                        addEightDigitLimit(txtMaNhanVien);
                    }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
               
            }
        });
    }
    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        lamMoiDuLieu();
    }//GEN-LAST:event_btnLamMoiActionPerformed
//     private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {                                          
//        // TODO add your handling code here:
//        lamMoiDuLieu();
//    }    
    
    private void lamMoiDuLieu(){
        txtMaNhanVien.setText("");
        lblTenNVKyTu.setText("");
        if(txtMaNhanVien.getText().length()==0){
            clearTable((DefaultTableModel) tblNhanVien.getModel());
        }
    }
    private void capNhatDanhSachNhanVien(){
    	
        nhanVien_DAO = new NhanVienDAO_IMP();
        chucVu_DAO = new ChucVuDAO_IMP();
        ArrayList<ChucVu> dsChucVu = chucVu_DAO.getDSChucVu();
        taiKhoan_DAO = new TaiKhoanDAO_IMP();
        ArrayList<TaiKhoan> dsTaiKhoan = taiKhoan_DAO.layDanhSachTaiKhoan();
        ArrayList<NhanVien> dsNhanVien = nhanVien_DAO.layDanhSachNhanVien();
      
        String colTieuDe1[] = new String[]{"Mã nhân viên", "Tên nhân viên", "Mật khẩu", "Chức vụ"};
        DefaultTableModel model = new DefaultTableModel(colTieuDe1, 0);
           Object[] row;
        for (NhanVien nhanVien : dsNhanVien) {
              row = new Object[12];
            // GÁN GIÁ TRỊ
            row[0] = nhanVien.getMaNV();
            row[1] = nhanVien.getHoTenNhanVien();
            for (TaiKhoan taiKhoan : dsTaiKhoan){
                if(taiKhoan.getTenTK().equals(nhanVien.getMaNV()))
                	row[2] = taiKhoan.getMatKhau();
            }
            for (ChucVu chucVu : dsChucVu) {
               if(nhanVien.getChucVu().getMaChucVu().equals(chucVu.getMaChucVu()))
                   
                row[3]  = chucVu.getTenChucVu();
        }
           model.addRow(row);
        }
        tblNhanVien.setModel(model);
    }   
    

private void capNhatDanhSachNhanVien_TheoTenDangNhap(String tenDangNhap){
        nhanVien_DAO = new NhanVienDAO_IMP();
        chucVu_DAO = new ChucVuDAO_IMP();
        taiKhoan_DAO = new TaiKhoanDAO_IMP();
      
        ArrayList<ChucVu> dsChucVu = chucVu_DAO.getDSChucVu();
        ArrayList<TaiKhoan> dsTaiKhoan = taiKhoan_DAO.layDanhSachTaiKhoan();
        ArrayList<NhanVien> dsnv = nhanVien_DAO.timKiemDanhSachTaiKhoanTheoTenDangNhap(tenDangNhap);
      
        String colTieuDe1[] = new String[]{"Mã nhân viên", "Tên nhân viên", "Mật khẩu", "Chức vụ"};
        DefaultTableModel model = new DefaultTableModel(colTieuDe1, 0);
           Object[] row;
        for (NhanVien nhanVien : dsnv) {
              row = new Object[12];
            // GÁN GIÁ TRỊ
            row[0] = nhanVien.getMaNV();
            row[1] = nhanVien.getHoTenNhanVien();
            for (TaiKhoan taiKhoan : dsTaiKhoan){
                if(taiKhoan.getTenTK().equals(nhanVien.getMaNV()))
                		row[2] = taiKhoan.getMatKhau();
            }
            for (ChucVu chucVu : dsChucVu) {
               if(nhanVien.getChucVu().getMaChucVu().equals(chucVu.getMaChucVu())) 
                row[3]  = chucVu.getTenChucVu();
        }
           model.addRow(row);
        }
        tblNhanVien.setModel(model);
    }   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapLaiMatKhau;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMaNhanVien;
    private javax.swing.JLabel lblTenNVKyTu;
    private javax.swing.JLabel lblTenNhanVien;
    private javax.swing.JPanel pnlTacVu;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtMaNhanVien;
    // End of variables declaration//GEN-END:variables
}
